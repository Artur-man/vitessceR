% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wrappers.R
\docType{class}
\name{SeuratWrapper}
\alias{SeuratWrapper}
\title{SeuratWrapper Class}
\description{
Class representing a local Seurat object in a Vitessce dataset.
}
\details{
Seurat object wrapper class
}
\keyword{internal}
\section{Super class}{
\code{\link[vitessce:AbstractWrapper]{vitessce::AbstractWrapper}} -> \code{SeuratWrapper}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{obj}}{The object to wrap.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{SeuratWrapper$new()}}
\item \href{#method-create_cells_list}{\code{SeuratWrapper$create_cells_list()}}
\item \href{#method-get_cells}{\code{SeuratWrapper$get_cells()}}
\item \href{#method-clone}{\code{SeuratWrapper$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="vitessce" data-topic="AbstractWrapper" data-id="create_response_json">}\href{../../vitessce/html/AbstractWrapper.html#method-create_response_json}{\code{vitessce::AbstractWrapper$create_response_json()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="vitessce" data-topic="AbstractWrapper" data-id="get_cell_sets">}\href{../../vitessce/html/AbstractWrapper.html#method-get_cell_sets}{\code{vitessce::AbstractWrapper$get_cell_sets()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="vitessce" data-topic="AbstractWrapper" data-id="get_data">}\href{../../vitessce/html/AbstractWrapper.html#method-get_data}{\code{vitessce::AbstractWrapper$get_data()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="vitessce" data-topic="AbstractWrapper" data-id="get_expression_matrix">}\href{../../vitessce/html/AbstractWrapper.html#method-get_expression_matrix}{\code{vitessce::AbstractWrapper$get_expression_matrix()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="vitessce" data-topic="AbstractWrapper" data-id="get_molecules">}\href{../../vitessce/html/AbstractWrapper.html#method-get_molecules}{\code{vitessce::AbstractWrapper$get_molecules()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="vitessce" data-topic="AbstractWrapper" data-id="get_neighborhoods">}\href{../../vitessce/html/AbstractWrapper.html#method-get_neighborhoods}{\code{vitessce::AbstractWrapper$get_neighborhoods()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="vitessce" data-topic="AbstractWrapper" data-id="get_raster">}\href{../../vitessce/html/AbstractWrapper.html#method-get_raster}{\code{vitessce::AbstractWrapper$get_raster()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="vitessce" data-topic="AbstractWrapper" data-id="get_route">}\href{../../vitessce/html/AbstractWrapper.html#method-get_route}{\code{vitessce::AbstractWrapper$get_route()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="vitessce" data-topic="AbstractWrapper" data-id="get_url">}\href{../../vitessce/html/AbstractWrapper.html#method-get_url}{\code{vitessce::AbstractWrapper$get_url()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a wrapper around a Seurat object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeuratWrapper$new(obj)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{obj}}{The object to wrap.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{SeuratWrapper} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-create_cells_list"></a>}}
\if{latex}{\out{\hypertarget{method-create_cells_list}{}}}
\subsection{Method \code{create_cells_list()}}{
Create a list representing the cells in the Seurat object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeuratWrapper$create_cells_list()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list that can be converted to JSON.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_cells"></a>}}
\if{latex}{\out{\hypertarget{method-get_cells}{}}}
\subsection{Method \code{get_cells()}}{
Get the routes and file definitions for the cells data type.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeuratWrapper$get_cells(port, dataset_uid, obj_i)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{port}}{The port on which the web server is serving.}

\item{\code{dataset_uid}}{The ID for this dataset.}

\item{\code{obj_i}}{The index of this data object within the dataset.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of \code{routes} and \code{file_defs} lists.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SeuratWrapper$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
